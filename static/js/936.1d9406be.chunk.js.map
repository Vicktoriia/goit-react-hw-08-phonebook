{"version":3,"file":"static/js/936.1d9406be.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/Section/Section.styled.js","components/Section/Section.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactItem.styled.js","components/ContactList/ContactItem.js","components/Notifications/Notifications.styled.js","components/Notifications/Notifications.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/Phonebook.styled.js","Pages/Phonebook.js"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\n\nexport const SectionContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Title = styled.h2``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionContainer, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionContainer>\n    <Title>{title}</Title>\n    {children}\n  </SectionContainer>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filters.name;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  padding: 30px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  border: 1px solid black;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 12px;\n  font-size: 15px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\nimport { Form, Label } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    )) {\n      alert(`\"${name} already in contacts\"`);\n      form.reset();\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          name=\"name\"\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required={true}\n          placeholder=\"Enter name\"\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required={true}\n          placeholder=\"Enter phone number\"\n        />\n      </Label>\n\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0;\n  width: 450px;\n`;\n\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\nmargin - left: 20px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid black;\n  list-style-position: inside;\n  width: 450px;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { Button, Item } from './ContactItem.styled';\n\nconst ContactListItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Item>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-style: italic;\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Notifications.styled';\n\nconst Notification = ({ message }) => <Message>{message}</Message>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts, selectFilter } from '../../redux/selectors';\nimport { List } from './ContactList.styled';\nimport ContactListItem from '../ContactList/ContactItem';\nimport Notification from '../Notifications/Notifications';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const filter = useSelector(selectFilter);\n\n    const showMessage = contacts.length === 0 && filter;\n\n  return (\n    <div>\n      {showMessage && <Notification message=\"There is no contacts\" />}\n      {contacts.length > 0 && (\n        <List>\n          {contacts.map((contact, id) => (\n            <ContactListItem key={id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  filter: PropTypes.string,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n `;\nexport const FilterInput = styled.input`\n  height: 22px;\n  padding: 0 8px;\n  margin-top: 10px;\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    border: 2px solid orange;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filtersSlice';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  if (contacts.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <FilterLabel>Find contacts by Name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contact\"\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  background-color: lightgrey;\n`;\n","import Section from '../components/Section/Section';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport Loader from '../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectLoading, selectError } from '../redux/selectors';\nimport { Div } from './Phonebook.styled';\n\nfunction Phonebook() {\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <Div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <ContactList />\n      </Section>\n    </Div>\n  );\n}\n\nexport default Phonebook;\n"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","SectionContainer","styled","Title","title","children","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filters","selectLoading","isLoading","selectError","error","selectFilteredContacts","filter","toLowerCase","includes","Form","Label","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","number","contact","alert","reset","addContact","type","pattern","required","placeholder","List","Button","Item","id","onClick","deleteContact","Message","message","showMessage","FilterLabel","FilterInput","onChange","setFilter","Div","Loader"],"sourceRoot":""}